name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-dockerhub-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Login to DockerHub
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build, tag, and push image to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $DOCKERHUB_REPOSITORY:$IMAGE_TAG .
          docker push $DOCKERHUB_REPOSITORY:$IMAGE_TAG

  Continuous-Deployment:
    needs: build-and-push-dockerhub-image
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Pull latest images
        run: |
          docker pull ${{ secrets.DOCKERHUB_REPOSITORY }}:latest

      - name: Stop and remove container if running
        run: |
          docker ps -q --filter "name=cnncls" | grep -q . && docker stop cnncls && docker rm -fv cnncls

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8080:8080 --name=cnncls \
            ${{ secrets.DOCKERHUB_REPOSITORY }}:latest

      - name: Clean previous images and containers
        run: |
          docker system prune -f
